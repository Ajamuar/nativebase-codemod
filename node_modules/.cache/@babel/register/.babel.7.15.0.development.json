{
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/adityajamuar/Sites/projects/nativebase/code-mod/nativebase-codemod/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/adityajamuar/Sites/projects/nativebase/code-mod/nativebase-codemod\",\"filename\":\"/Users/adityajamuar/Sites/projects/nativebase/code-mod/nativebase-codemod/transformer.js\",\"targets\":{},\"cloneInputAst\":true,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/adityajamuar/Sites/projects/nativebase/code-mod/nativebase-codemod\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"IndexedAccessType\":{\"enter\":[null]},\"OptionalIndexedAccessType\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/adityajamuar/Sites/projects/nativebase/code-mod/nativebase-codemod/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/adityajamuar/Sites/projects/nativebase/code-mod/nativebase-codemod",
      "filename": "/Users/adityajamuar/Sites/projects/nativebase/code-mod/nativebase-codemod/transformer.js",
      "targets": {},
      "cloneInputAst": true,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/adityajamuar/Sites/projects/nativebase/code-mod/nativebase-codemod",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-flow-strip-types",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            },
            "ImportDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "ClassPrivateProperty": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "TypeCastExpression": {
              "enter": [
                null,
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "ImportSpecifier": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "AnyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ArrayTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ClassImplements": {
              "enter": [
                null
              ]
            },
            "DeclareClass": {
              "enter": [
                null
              ]
            },
            "DeclareFunction": {
              "enter": [
                null
              ]
            },
            "DeclareInterface": {
              "enter": [
                null
              ]
            },
            "DeclareModule": {
              "enter": [
                null
              ]
            },
            "DeclareModuleExports": {
              "enter": [
                null
              ]
            },
            "DeclareTypeAlias": {
              "enter": [
                null
              ]
            },
            "DeclareOpaqueType": {
              "enter": [
                null
              ]
            },
            "DeclareVariable": {
              "enter": [
                null
              ]
            },
            "DeclareExportDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclareExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclaredPredicate": {
              "enter": [
                null
              ]
            },
            "ExistsTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeParam": {
              "enter": [
                null
              ]
            },
            "GenericTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "InferredPredicate": {
              "enter": [
                null
              ]
            },
            "InterfaceExtends": {
              "enter": [
                null
              ]
            },
            "InterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "InterfaceTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IntersectionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "MixedTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "EmptyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullableTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeInternalSlot": {
              "enter": [
                null
              ]
            },
            "ObjectTypeCallProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeIndexer": {
              "enter": [
                null
              ]
            },
            "ObjectTypeProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeSpreadProperty": {
              "enter": [
                null
              ]
            },
            "OpaqueType": {
              "enter": [
                null
              ]
            },
            "QualifiedTypeIdentifier": {
              "enter": [
                null
              ]
            },
            "StringLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "StringTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "SymbolTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ThisTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TupleTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeofTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeAlias": {
              "enter": [
                null
              ]
            },
            "TypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeParameter": {
              "enter": [
                null
              ]
            },
            "TypeParameterDeclaration": {
              "enter": [
                null
              ]
            },
            "TypeParameterInstantiation": {
              "enter": [
                null
              ]
            },
            "UnionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "Variance": {
              "enter": [
                null
              ]
            },
            "VoidTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IndexedAccessType": {
              "enter": [
                null
              ]
            },
            "OptionalIndexedAccessType": {
              "enter": [
                null
              ]
            },
            "ExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "syntax-numeric-separator",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/adityajamuar/Sites/projects/nativebase/code-mod/nativebase-codemod/transformer.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "nullishCoalescingOperator",
          [
            "flow",
            {}
          ],
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/adityajamuar/Sites/projects/nativebase/code-mod/nativebase-codemod/transformer.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/adityajamuar/Sites/projects/nativebase/code-mod/nativebase-codemod/",
        "sourceFileName": "transformer.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n// Replacing props with type\nvar _default = (fileInfo, api) => {\n  const j = api.jscodeshift;\n  const root = j(fileInfo.source); // finding Box\n\n  const Box = root.find(j.JSXOpeningElement, {\n    name: {\n      type: \"JSXIdentifier\",\n      name: \"Box\"\n    }\n  }); // console.log('MYLOG: Box: ', Box);\n  // find bg in Box\n\n  const updatedBox = Box.find(j.JSXAttribute, {\n    type: \"JSXAttribute\"\n  }).replaceWith(nodePath => {\n    // get the underlying Node\n    // console.log('MYLOG: nodePath: ', nodePath);\n    const {\n      node\n    } = nodePath;\n    console.log(\"%c &*& node.name.name\", \"color: #10b981;\", node.name.name); // console.log('MYLOG: node: ', node);\n\n    if (node.name.name === \"lineHeight\") {\n      node.value.value = \"8\";\n    } // change to our new prop\n    // node.value.value = 'red.400';\n    // replaceWith should return a Node, not a NodePath\n\n\n    return node;\n  }).toSource(); // console.log('MYLOG:Box: ', Box);\n\n  console.log(\"MYLOG: updatedBox: \", updatedBox);\n  return updatedBox;\n};\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRyYW5zZm9ybWVyLmpzIl0sIm5hbWVzIjpbImZpbGVJbmZvIiwiYXBpIiwiaiIsImpzY29kZXNoaWZ0Iiwicm9vdCIsInNvdXJjZSIsIkJveCIsImZpbmQiLCJKU1hPcGVuaW5nRWxlbWVudCIsIm5hbWUiLCJ0eXBlIiwidXBkYXRlZEJveCIsIkpTWEF0dHJpYnV0ZSIsInJlcGxhY2VXaXRoIiwibm9kZVBhdGgiLCJub2RlIiwiY29uc29sZSIsImxvZyIsInZhbHVlIiwidG9Tb3VyY2UiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtlQUVlLENBQUNBLFFBQUQsRUFBV0MsR0FBWCxLQUFtQjtBQUNoQyxRQUFNQyxDQUFDLEdBQUdELEdBQUcsQ0FBQ0UsV0FBZDtBQUVBLFFBQU1DLElBQUksR0FBR0YsQ0FBQyxDQUFDRixRQUFRLENBQUNLLE1BQVYsQ0FBZCxDQUhnQyxDQUtoQzs7QUFDQSxRQUFNQyxHQUFHLEdBQUdGLElBQUksQ0FBQ0csSUFBTCxDQUFVTCxDQUFDLENBQUNNLGlCQUFaLEVBQStCO0FBQ3pDQyxJQUFBQSxJQUFJLEVBQUU7QUFDSkMsTUFBQUEsSUFBSSxFQUFFLGVBREY7QUFFSkQsTUFBQUEsSUFBSSxFQUFFO0FBRkY7QUFEbUMsR0FBL0IsQ0FBWixDQU5nQyxDQWFoQztBQUVBOztBQUNBLFFBQU1FLFVBQVUsR0FBR0wsR0FBRyxDQUFDQyxJQUFKLENBQVNMLENBQUMsQ0FBQ1UsWUFBWCxFQUF5QjtBQUMxQ0YsSUFBQUEsSUFBSSxFQUFFO0FBRG9DLEdBQXpCLEVBR2hCRyxXQUhnQixDQUdIQyxRQUFELElBQWM7QUFDekI7QUFDQTtBQUNBLFVBQU07QUFBRUMsTUFBQUE7QUFBRixRQUFXRCxRQUFqQjtBQUVBRSxJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSx1QkFBWixFQUFxQyxpQkFBckMsRUFBd0RGLElBQUksQ0FBQ04sSUFBTCxDQUFVQSxJQUFsRSxFQUx5QixDQU16Qjs7QUFDQSxRQUFJTSxJQUFJLENBQUNOLElBQUwsQ0FBVUEsSUFBVixLQUFtQixZQUF2QixFQUFxQztBQUNuQ00sTUFBQUEsSUFBSSxDQUFDRyxLQUFMLENBQVdBLEtBQVgsR0FBbUIsR0FBbkI7QUFDRCxLQVR3QixDQVd6QjtBQUNBO0FBQ0E7OztBQUNBLFdBQU9ILElBQVA7QUFDRCxHQWxCZ0IsRUFtQmhCSSxRQW5CZ0IsRUFBbkIsQ0FoQmdDLENBcUNoQzs7QUFDQUgsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVkscUJBQVosRUFBbUNOLFVBQW5DO0FBRUEsU0FBT0EsVUFBUDtBQUNELEMiLCJzb3VyY2VSb290IjoiL1VzZXJzL2FkaXR5YWphbXVhci9TaXRlcy9wcm9qZWN0cy9uYXRpdmViYXNlL2NvZGUtbW9kL25hdGl2ZWJhc2UtY29kZW1vZC8iLCJzb3VyY2VzQ29udGVudCI6WyIvLyBSZXBsYWNpbmcgcHJvcHMgd2l0aCB0eXBlXG5cbmV4cG9ydCBkZWZhdWx0IChmaWxlSW5mbywgYXBpKSA9PiB7XG4gIGNvbnN0IGogPSBhcGkuanNjb2Rlc2hpZnQ7XG5cbiAgY29uc3Qgcm9vdCA9IGooZmlsZUluZm8uc291cmNlKTtcblxuICAvLyBmaW5kaW5nIEJveFxuICBjb25zdCBCb3ggPSByb290LmZpbmQoai5KU1hPcGVuaW5nRWxlbWVudCwge1xuICAgIG5hbWU6IHtcbiAgICAgIHR5cGU6IFwiSlNYSWRlbnRpZmllclwiLFxuICAgICAgbmFtZTogXCJCb3hcIixcbiAgICB9LFxuICB9KTtcblxuICAvLyBjb25zb2xlLmxvZygnTVlMT0c6IEJveDogJywgQm94KTtcblxuICAvLyBmaW5kIGJnIGluIEJveFxuICBjb25zdCB1cGRhdGVkQm94ID0gQm94LmZpbmQoai5KU1hBdHRyaWJ1dGUsIHtcbiAgICB0eXBlOiBcIkpTWEF0dHJpYnV0ZVwiLFxuICB9KVxuICAgIC5yZXBsYWNlV2l0aCgobm9kZVBhdGgpID0+IHtcbiAgICAgIC8vIGdldCB0aGUgdW5kZXJseWluZyBOb2RlXG4gICAgICAvLyBjb25zb2xlLmxvZygnTVlMT0c6IG5vZGVQYXRoOiAnLCBub2RlUGF0aCk7XG4gICAgICBjb25zdCB7IG5vZGUgfSA9IG5vZGVQYXRoO1xuXG4gICAgICBjb25zb2xlLmxvZyhcIiVjICYqJiBub2RlLm5hbWUubmFtZVwiLCBcImNvbG9yOiAjMTBiOTgxO1wiLCBub2RlLm5hbWUubmFtZSk7XG4gICAgICAvLyBjb25zb2xlLmxvZygnTVlMT0c6IG5vZGU6ICcsIG5vZGUpO1xuICAgICAgaWYgKG5vZGUubmFtZS5uYW1lID09PSBcImxpbmVIZWlnaHRcIikge1xuICAgICAgICBub2RlLnZhbHVlLnZhbHVlID0gXCI4XCI7XG4gICAgICB9XG5cbiAgICAgIC8vIGNoYW5nZSB0byBvdXIgbmV3IHByb3BcbiAgICAgIC8vIG5vZGUudmFsdWUudmFsdWUgPSAncmVkLjQwMCc7XG4gICAgICAvLyByZXBsYWNlV2l0aCBzaG91bGQgcmV0dXJuIGEgTm9kZSwgbm90IGEgTm9kZVBhdGhcbiAgICAgIHJldHVybiBub2RlO1xuICAgIH0pXG4gICAgLnRvU291cmNlKCk7XG5cbiAgLy8gY29uc29sZS5sb2coJ01ZTE9HOkJveDogJywgQm94KTtcbiAgY29uc29sZS5sb2coXCJNWUxPRzogdXBkYXRlZEJveDogXCIsIHVwZGF0ZWRCb3gpO1xuXG4gIHJldHVybiB1cGRhdGVkQm94O1xufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "transformer.js"
      ],
      "names": [
        "fileInfo",
        "api",
        "j",
        "jscodeshift",
        "root",
        "source",
        "Box",
        "find",
        "JSXOpeningElement",
        "name",
        "type",
        "updatedBox",
        "JSXAttribute",
        "replaceWith",
        "nodePath",
        "node",
        "console",
        "log",
        "value",
        "toSource"
      ],
      "mappings": ";;;;;;;AAAA;eAEe,CAACA,QAAD,EAAWC,GAAX,KAAmB;AAChC,QAAMC,CAAC,GAAGD,GAAG,CAACE,WAAd;AAEA,QAAMC,IAAI,GAAGF,CAAC,CAACF,QAAQ,CAACK,MAAV,CAAd,CAHgC,CAKhC;;AACA,QAAMC,GAAG,GAAGF,IAAI,CAACG,IAAL,CAAUL,CAAC,CAACM,iBAAZ,EAA+B;AACzCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,IAAI,EAAE,eADF;AAEJD,MAAAA,IAAI,EAAE;AAFF;AADmC,GAA/B,CAAZ,CANgC,CAahC;AAEA;;AACA,QAAME,UAAU,GAAGL,GAAG,CAACC,IAAJ,CAASL,CAAC,CAACU,YAAX,EAAyB;AAC1CF,IAAAA,IAAI,EAAE;AADoC,GAAzB,EAGhBG,WAHgB,CAGHC,QAAD,IAAc;AACzB;AACA;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAWD,QAAjB;AAEAE,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqC,iBAArC,EAAwDF,IAAI,CAACN,IAAL,CAAUA,IAAlE,EALyB,CAMzB;;AACA,QAAIM,IAAI,CAACN,IAAL,CAAUA,IAAV,KAAmB,YAAvB,EAAqC;AACnCM,MAAAA,IAAI,CAACG,KAAL,CAAWA,KAAX,GAAmB,GAAnB;AACD,KATwB,CAWzB;AACA;AACA;;;AACA,WAAOH,IAAP;AACD,GAlBgB,EAmBhBI,QAnBgB,EAAnB,CAhBgC,CAqChC;;AACAH,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCN,UAAnC;AAEA,SAAOA,UAAP;AACD,C",
      "sourceRoot": "/Users/adityajamuar/Sites/projects/nativebase/code-mod/nativebase-codemod/",
      "sourcesContent": [
        "// Replacing props with type\n\nexport default (fileInfo, api) => {\n  const j = api.jscodeshift;\n\n  const root = j(fileInfo.source);\n\n  // finding Box\n  const Box = root.find(j.JSXOpeningElement, {\n    name: {\n      type: \"JSXIdentifier\",\n      name: \"Box\",\n    },\n  });\n\n  // console.log('MYLOG: Box: ', Box);\n\n  // find bg in Box\n  const updatedBox = Box.find(j.JSXAttribute, {\n    type: \"JSXAttribute\",\n  })\n    .replaceWith((nodePath) => {\n      // get the underlying Node\n      // console.log('MYLOG: nodePath: ', nodePath);\n      const { node } = nodePath;\n\n      console.log(\"%c &*& node.name.name\", \"color: #10b981;\", node.name.name);\n      // console.log('MYLOG: node: ', node);\n      if (node.name.name === \"lineHeight\") {\n        node.value.value = \"8\";\n      }\n\n      // change to our new prop\n      // node.value.value = 'red.400';\n      // replaceWith should return a Node, not a NodePath\n      return node;\n    })\n    .toSource();\n\n  // console.log('MYLOG:Box: ', Box);\n  console.log(\"MYLOG: updatedBox: \", updatedBox);\n\n  return updatedBox;\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1629980169693
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/suraj/Sites/projects/nativebase-codemod/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/suraj/Sites/projects/nativebase-codemod\",\"filename\":\"/Users/suraj/Sites/projects/nativebase-codemod/transformer.js\",\"targets\":{},\"cloneInputAst\":true,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/suraj/Sites/projects/nativebase-codemod\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"IndexedAccessType\":{\"enter\":[null]},\"OptionalIndexedAccessType\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}}],\"presets\":[]}:7.15.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/suraj/Sites/projects/nativebase-codemod/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/suraj/Sites/projects/nativebase-codemod",
      "filename": "/Users/suraj/Sites/projects/nativebase-codemod/transformer.js",
      "targets": {},
      "cloneInputAst": true,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/suraj/Sites/projects/nativebase-codemod",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-flow-strip-types",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            },
            "ImportDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "ClassPrivateProperty": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "TypeCastExpression": {
              "enter": [
                null,
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "ImportSpecifier": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "AnyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ArrayTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ClassImplements": {
              "enter": [
                null
              ]
            },
            "DeclareClass": {
              "enter": [
                null
              ]
            },
            "DeclareFunction": {
              "enter": [
                null
              ]
            },
            "DeclareInterface": {
              "enter": [
                null
              ]
            },
            "DeclareModule": {
              "enter": [
                null
              ]
            },
            "DeclareModuleExports": {
              "enter": [
                null
              ]
            },
            "DeclareTypeAlias": {
              "enter": [
                null
              ]
            },
            "DeclareOpaqueType": {
              "enter": [
                null
              ]
            },
            "DeclareVariable": {
              "enter": [
                null
              ]
            },
            "DeclareExportDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclareExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclaredPredicate": {
              "enter": [
                null
              ]
            },
            "ExistsTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeParam": {
              "enter": [
                null
              ]
            },
            "GenericTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "InferredPredicate": {
              "enter": [
                null
              ]
            },
            "InterfaceExtends": {
              "enter": [
                null
              ]
            },
            "InterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "InterfaceTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IntersectionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "MixedTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "EmptyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullableTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeInternalSlot": {
              "enter": [
                null
              ]
            },
            "ObjectTypeCallProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeIndexer": {
              "enter": [
                null
              ]
            },
            "ObjectTypeProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeSpreadProperty": {
              "enter": [
                null
              ]
            },
            "OpaqueType": {
              "enter": [
                null
              ]
            },
            "QualifiedTypeIdentifier": {
              "enter": [
                null
              ]
            },
            "StringLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "StringTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "SymbolTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ThisTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TupleTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeofTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeAlias": {
              "enter": [
                null
              ]
            },
            "TypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeParameter": {
              "enter": [
                null
              ]
            },
            "TypeParameterDeclaration": {
              "enter": [
                null
              ]
            },
            "TypeParameterInstantiation": {
              "enter": [
                null
              ]
            },
            "UnionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "Variance": {
              "enter": [
                null
              ]
            },
            "VoidTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IndexedAccessType": {
              "enter": [
                null
              ]
            },
            "OptionalIndexedAccessType": {
              "enter": [
                null
              ]
            },
            "ExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/suraj/Sites/projects/nativebase-codemod/transformer.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "nullishCoalescingOperator",
          [
            "flow",
            {}
          ]
        ]
      },
      "generatorOpts": {
        "filename": "/Users/suraj/Sites/projects/nativebase-codemod/transformer.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/suraj/Sites/projects/nativebase-codemod/",
        "sourceFileName": "transformer.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n// Replacing props with type\nvar _default = (fileInfo, api) => {\n  const j = api.jscodeshift;\n  const root = j(fileInfo.source); // finding Box\n\n  const Box = root.find(j.JSXOpeningElement, {\n    name: {\n      type: \"JSXIdentifier\",\n      name: \"Box\"\n    }\n  }); // console.log('MYLOG: Box: ', Box);\n  // find bg in Box\n\n  const updatedBox = Box.find(j.JSXAttribute, {\n    type: \"JSXAttribute\"\n  }).replaceWith(nodePath => {\n    // get the underlying Node\n    // console.log('MYLOG: nodePath: ', nodePath);\n    const {\n      node\n    } = nodePath;\n    console.log(\"%c &*& node.name.name\", \"color: #10b981;\", node.name.name);\n\n    if (node.name.name === \"lineHeight\") {\n      // node.value.value = \"8\";\n      node.value.expression.value = \"8\";\n      node.value.expression.raw = \"8\";\n      console.log(\"MYLOG: node: \", node);\n    } // change to our new prop\n    // node.value.value = 'red.400';\n    // replaceWith should return a Node, not a NodePath\n\n\n    return node;\n  }).toSource(); // console.log('MYLOG:Box: ', Box);\n\n  console.log(\"MYLOG: updatedBox: \", updatedBox);\n  return updatedBox;\n};\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRyYW5zZm9ybWVyLmpzIl0sIm5hbWVzIjpbImZpbGVJbmZvIiwiYXBpIiwiaiIsImpzY29kZXNoaWZ0Iiwicm9vdCIsInNvdXJjZSIsIkJveCIsImZpbmQiLCJKU1hPcGVuaW5nRWxlbWVudCIsIm5hbWUiLCJ0eXBlIiwidXBkYXRlZEJveCIsIkpTWEF0dHJpYnV0ZSIsInJlcGxhY2VXaXRoIiwibm9kZVBhdGgiLCJub2RlIiwiY29uc29sZSIsImxvZyIsInZhbHVlIiwiZXhwcmVzc2lvbiIsInJhdyIsInRvU291cmNlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7ZUFFZSxDQUFDQSxRQUFELEVBQVdDLEdBQVgsS0FBbUI7QUFDaEMsUUFBTUMsQ0FBQyxHQUFHRCxHQUFHLENBQUNFLFdBQWQ7QUFFQSxRQUFNQyxJQUFJLEdBQUdGLENBQUMsQ0FBQ0YsUUFBUSxDQUFDSyxNQUFWLENBQWQsQ0FIZ0MsQ0FLaEM7O0FBQ0EsUUFBTUMsR0FBRyxHQUFHRixJQUFJLENBQUNHLElBQUwsQ0FBVUwsQ0FBQyxDQUFDTSxpQkFBWixFQUErQjtBQUN6Q0MsSUFBQUEsSUFBSSxFQUFFO0FBQ0pDLE1BQUFBLElBQUksRUFBRSxlQURGO0FBRUpELE1BQUFBLElBQUksRUFBRTtBQUZGO0FBRG1DLEdBQS9CLENBQVosQ0FOZ0MsQ0FhaEM7QUFFQTs7QUFDQSxRQUFNRSxVQUFVLEdBQUdMLEdBQUcsQ0FBQ0MsSUFBSixDQUFTTCxDQUFDLENBQUNVLFlBQVgsRUFBeUI7QUFDMUNGLElBQUFBLElBQUksRUFBRTtBQURvQyxHQUF6QixFQUdoQkcsV0FIZ0IsQ0FHSEMsUUFBRCxJQUFjO0FBQ3pCO0FBQ0E7QUFDQSxVQUFNO0FBQUVDLE1BQUFBO0FBQUYsUUFBV0QsUUFBakI7QUFFQUUsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksdUJBQVosRUFBcUMsaUJBQXJDLEVBQXdERixJQUFJLENBQUNOLElBQUwsQ0FBVUEsSUFBbEU7O0FBQ0EsUUFBSU0sSUFBSSxDQUFDTixJQUFMLENBQVVBLElBQVYsS0FBbUIsWUFBdkIsRUFBcUM7QUFDbkM7QUFDQU0sTUFBQUEsSUFBSSxDQUFDRyxLQUFMLENBQVdDLFVBQVgsQ0FBc0JELEtBQXRCLEdBQThCLEdBQTlCO0FBQ0FILE1BQUFBLElBQUksQ0FBQ0csS0FBTCxDQUFXQyxVQUFYLENBQXNCQyxHQUF0QixHQUE0QixHQUE1QjtBQUNBSixNQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxlQUFaLEVBQTZCRixJQUE3QjtBQUNELEtBWHdCLENBYXpCO0FBQ0E7QUFDQTs7O0FBQ0EsV0FBT0EsSUFBUDtBQUNELEdBcEJnQixFQXFCaEJNLFFBckJnQixFQUFuQixDQWhCZ0MsQ0F1Q2hDOztBQUNBTCxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxxQkFBWixFQUFtQ04sVUFBbkM7QUFFQSxTQUFPQSxVQUFQO0FBQ0QsQyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvc3VyYWovU2l0ZXMvcHJvamVjdHMvbmF0aXZlYmFzZS1jb2RlbW9kLyIsInNvdXJjZXNDb250ZW50IjpbIi8vIFJlcGxhY2luZyBwcm9wcyB3aXRoIHR5cGVcblxuZXhwb3J0IGRlZmF1bHQgKGZpbGVJbmZvLCBhcGkpID0+IHtcbiAgY29uc3QgaiA9IGFwaS5qc2NvZGVzaGlmdDtcblxuICBjb25zdCByb290ID0gaihmaWxlSW5mby5zb3VyY2UpO1xuXG4gIC8vIGZpbmRpbmcgQm94XG4gIGNvbnN0IEJveCA9IHJvb3QuZmluZChqLkpTWE9wZW5pbmdFbGVtZW50LCB7XG4gICAgbmFtZToge1xuICAgICAgdHlwZTogXCJKU1hJZGVudGlmaWVyXCIsXG4gICAgICBuYW1lOiBcIkJveFwiLFxuICAgIH0sXG4gIH0pO1xuXG4gIC8vIGNvbnNvbGUubG9nKCdNWUxPRzogQm94OiAnLCBCb3gpO1xuXG4gIC8vIGZpbmQgYmcgaW4gQm94XG4gIGNvbnN0IHVwZGF0ZWRCb3ggPSBCb3guZmluZChqLkpTWEF0dHJpYnV0ZSwge1xuICAgIHR5cGU6IFwiSlNYQXR0cmlidXRlXCIsXG4gIH0pXG4gICAgLnJlcGxhY2VXaXRoKChub2RlUGF0aCkgPT4ge1xuICAgICAgLy8gZ2V0IHRoZSB1bmRlcmx5aW5nIE5vZGVcbiAgICAgIC8vIGNvbnNvbGUubG9nKCdNWUxPRzogbm9kZVBhdGg6ICcsIG5vZGVQYXRoKTtcbiAgICAgIGNvbnN0IHsgbm9kZSB9ID0gbm9kZVBhdGg7XG5cbiAgICAgIGNvbnNvbGUubG9nKFwiJWMgJiomIG5vZGUubmFtZS5uYW1lXCIsIFwiY29sb3I6ICMxMGI5ODE7XCIsIG5vZGUubmFtZS5uYW1lKTtcbiAgICAgIGlmIChub2RlLm5hbWUubmFtZSA9PT0gXCJsaW5lSGVpZ2h0XCIpIHtcbiAgICAgICAgLy8gbm9kZS52YWx1ZS52YWx1ZSA9IFwiOFwiO1xuICAgICAgICBub2RlLnZhbHVlLmV4cHJlc3Npb24udmFsdWUgPSBcIjhcIjtcbiAgICAgICAgbm9kZS52YWx1ZS5leHByZXNzaW9uLnJhdyA9IFwiOFwiO1xuICAgICAgICBjb25zb2xlLmxvZyhcIk1ZTE9HOiBub2RlOiBcIiwgbm9kZSk7XG4gICAgICB9XG5cbiAgICAgIC8vIGNoYW5nZSB0byBvdXIgbmV3IHByb3BcbiAgICAgIC8vIG5vZGUudmFsdWUudmFsdWUgPSAncmVkLjQwMCc7XG4gICAgICAvLyByZXBsYWNlV2l0aCBzaG91bGQgcmV0dXJuIGEgTm9kZSwgbm90IGEgTm9kZVBhdGhcbiAgICAgIHJldHVybiBub2RlO1xuICAgIH0pXG4gICAgLnRvU291cmNlKCk7XG5cbiAgLy8gY29uc29sZS5sb2coJ01ZTE9HOkJveDogJywgQm94KTtcbiAgY29uc29sZS5sb2coXCJNWUxPRzogdXBkYXRlZEJveDogXCIsIHVwZGF0ZWRCb3gpO1xuXG4gIHJldHVybiB1cGRhdGVkQm94O1xufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "transformer.js"
      ],
      "names": [
        "fileInfo",
        "api",
        "j",
        "jscodeshift",
        "root",
        "source",
        "Box",
        "find",
        "JSXOpeningElement",
        "name",
        "type",
        "updatedBox",
        "JSXAttribute",
        "replaceWith",
        "nodePath",
        "node",
        "console",
        "log",
        "value",
        "expression",
        "raw",
        "toSource"
      ],
      "mappings": ";;;;;;;AAAA;eAEe,CAACA,QAAD,EAAWC,GAAX,KAAmB;AAChC,QAAMC,CAAC,GAAGD,GAAG,CAACE,WAAd;AAEA,QAAMC,IAAI,GAAGF,CAAC,CAACF,QAAQ,CAACK,MAAV,CAAd,CAHgC,CAKhC;;AACA,QAAMC,GAAG,GAAGF,IAAI,CAACG,IAAL,CAAUL,CAAC,CAACM,iBAAZ,EAA+B;AACzCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,IAAI,EAAE,eADF;AAEJD,MAAAA,IAAI,EAAE;AAFF;AADmC,GAA/B,CAAZ,CANgC,CAahC;AAEA;;AACA,QAAME,UAAU,GAAGL,GAAG,CAACC,IAAJ,CAASL,CAAC,CAACU,YAAX,EAAyB;AAC1CF,IAAAA,IAAI,EAAE;AADoC,GAAzB,EAGhBG,WAHgB,CAGHC,QAAD,IAAc;AACzB;AACA;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAWD,QAAjB;AAEAE,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqC,iBAArC,EAAwDF,IAAI,CAACN,IAAL,CAAUA,IAAlE;;AACA,QAAIM,IAAI,CAACN,IAAL,CAAUA,IAAV,KAAmB,YAAvB,EAAqC;AACnC;AACAM,MAAAA,IAAI,CAACG,KAAL,CAAWC,UAAX,CAAsBD,KAAtB,GAA8B,GAA9B;AACAH,MAAAA,IAAI,CAACG,KAAL,CAAWC,UAAX,CAAsBC,GAAtB,GAA4B,GAA5B;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,IAA7B;AACD,KAXwB,CAazB;AACA;AACA;;;AACA,WAAOA,IAAP;AACD,GApBgB,EAqBhBM,QArBgB,EAAnB,CAhBgC,CAuChC;;AACAL,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCN,UAAnC;AAEA,SAAOA,UAAP;AACD,C",
      "sourceRoot": "/Users/suraj/Sites/projects/nativebase-codemod/",
      "sourcesContent": [
        "// Replacing props with type\n\nexport default (fileInfo, api) => {\n  const j = api.jscodeshift;\n\n  const root = j(fileInfo.source);\n\n  // finding Box\n  const Box = root.find(j.JSXOpeningElement, {\n    name: {\n      type: \"JSXIdentifier\",\n      name: \"Box\",\n    },\n  });\n\n  // console.log('MYLOG: Box: ', Box);\n\n  // find bg in Box\n  const updatedBox = Box.find(j.JSXAttribute, {\n    type: \"JSXAttribute\",\n  })\n    .replaceWith((nodePath) => {\n      // get the underlying Node\n      // console.log('MYLOG: nodePath: ', nodePath);\n      const { node } = nodePath;\n\n      console.log(\"%c &*& node.name.name\", \"color: #10b981;\", node.name.name);\n      if (node.name.name === \"lineHeight\") {\n        // node.value.value = \"8\";\n        node.value.expression.value = \"8\";\n        node.value.expression.raw = \"8\";\n        console.log(\"MYLOG: node: \", node);\n      }\n\n      // change to our new prop\n      // node.value.value = 'red.400';\n      // replaceWith should return a Node, not a NodePath\n      return node;\n    })\n    .toSource();\n\n  // console.log('MYLOG:Box: ', Box);\n  console.log(\"MYLOG: updatedBox: \", updatedBox);\n\n  return updatedBox;\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1629982073161
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/suraj/Sites/projects/nativebase-codemod/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/suraj/Sites/projects/nativebase-codemod\",\"filename\":\"/Users/suraj/Sites/projects/nativebase-codemod/extend-theme-transformer.js\",\"targets\":{},\"cloneInputAst\":true,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/suraj/Sites/projects/nativebase-codemod\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"IndexedAccessType\":{\"enter\":[null]},\"OptionalIndexedAccessType\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}}],\"presets\":[]}:7.15.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/suraj/Sites/projects/nativebase-codemod/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/suraj/Sites/projects/nativebase-codemod",
      "filename": "/Users/suraj/Sites/projects/nativebase-codemod/extend-theme-transformer.js",
      "targets": {},
      "cloneInputAst": true,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/suraj/Sites/projects/nativebase-codemod",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-flow-strip-types",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            },
            "ImportDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "ClassPrivateProperty": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "TypeCastExpression": {
              "enter": [
                null,
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "ImportSpecifier": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "AnyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ArrayTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ClassImplements": {
              "enter": [
                null
              ]
            },
            "DeclareClass": {
              "enter": [
                null
              ]
            },
            "DeclareFunction": {
              "enter": [
                null
              ]
            },
            "DeclareInterface": {
              "enter": [
                null
              ]
            },
            "DeclareModule": {
              "enter": [
                null
              ]
            },
            "DeclareModuleExports": {
              "enter": [
                null
              ]
            },
            "DeclareTypeAlias": {
              "enter": [
                null
              ]
            },
            "DeclareOpaqueType": {
              "enter": [
                null
              ]
            },
            "DeclareVariable": {
              "enter": [
                null
              ]
            },
            "DeclareExportDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclareExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclaredPredicate": {
              "enter": [
                null
              ]
            },
            "ExistsTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeParam": {
              "enter": [
                null
              ]
            },
            "GenericTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "InferredPredicate": {
              "enter": [
                null
              ]
            },
            "InterfaceExtends": {
              "enter": [
                null
              ]
            },
            "InterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "InterfaceTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IntersectionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "MixedTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "EmptyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullableTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeInternalSlot": {
              "enter": [
                null
              ]
            },
            "ObjectTypeCallProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeIndexer": {
              "enter": [
                null
              ]
            },
            "ObjectTypeProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeSpreadProperty": {
              "enter": [
                null
              ]
            },
            "OpaqueType": {
              "enter": [
                null
              ]
            },
            "QualifiedTypeIdentifier": {
              "enter": [
                null
              ]
            },
            "StringLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "StringTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "SymbolTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ThisTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TupleTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeofTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeAlias": {
              "enter": [
                null
              ]
            },
            "TypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeParameter": {
              "enter": [
                null
              ]
            },
            "TypeParameterDeclaration": {
              "enter": [
                null
              ]
            },
            "TypeParameterInstantiation": {
              "enter": [
                null
              ]
            },
            "UnionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "Variance": {
              "enter": [
                null
              ]
            },
            "VoidTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IndexedAccessType": {
              "enter": [
                null
              ]
            },
            "OptionalIndexedAccessType": {
              "enter": [
                null
              ]
            },
            "ExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/suraj/Sites/projects/nativebase-codemod/extend-theme-transformer.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "nullishCoalescingOperator",
          [
            "flow",
            {}
          ]
        ]
      },
      "generatorOpts": {
        "filename": "/Users/suraj/Sites/projects/nativebase-codemod/extend-theme-transformer.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/suraj/Sites/projects/nativebase-codemod/",
        "sourceFileName": "extend-theme-transformer.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n// Replacing props with type\nvar _default = (fileInfo, api) => {\n  const j = api.jscodeshift;\n  const root = j(fileInfo.source); // // finding Box\n  // const Box = root.find(j.callExpression,\n  //   j.identifier('foo'),\n  // });\n\n  const callExpression = root.find(j.CallExpression, {\n    callee: {\n      type: \"Identifier\",\n      name: \"extendTheme\"\n    }\n  });\n  const extendThemeArgument = callExpression.find(j.ObjectExpression);\n  console.log(extendThemeArgument); // extendThemeArgument\n  //   // .find(j.ObjectExpression) // Find a list of object literals\n  //   .forEach((obj) => {\n  //     console.log(obj.value.properties);\n  //     // obj.value.properties.forEach((property) => {\n  //     //   console.log(property.key.name, \"obje here\");\n  //     //   //   // … go through each property …\n  //     //   //   // if (property.type !== 'Property') return;\n  //     //   //   // if (property.key.name !== 'promise') return;\n  //     //   //   // // … and if the key is 'promise', change it to 'request'\n  //     //   //   // property.key.name = 'request';\n  //     // });\n  //   });\n  // extendThemeArgument.properties.forEach((property) => {\n  //   console.log(property);\n  // });\n  // // console.log('MYLOG: Box: ', Box);\n  // // find bg in Box\n  // const updatedBox = Box.find(j.JSXAttribute, {\n  //   type: \"JSXAttribute\",\n  // })\n  //   .replaceWith((nodePath) => {\n  //     // get the underlying Node\n  //     // console.log('MYLOG: nodePath: ', nodePath);\n  //     const { node } = nodePath;\n  //     console.log(\"%c &*& node.name.name\", \"color: #10b981;\", node.name.name);\n  //     if (node.name.name === \"lineHeight\") {\n  //       // node.value.value = \"8\";\n  //       node.value.expression.value = \"8\";\n  //       node.value.expression.raw = \"8\";\n  //       console.log(\"MYLOG: node: \", node);\n  //     }\n  //     // change to our new prop\n  //     // node.value.value = 'red.400';\n  //     // replaceWith should return a Node, not a NodePath\n  //     return node;\n  //   })\n  //   .toSource();\n  // // console.log('MYLOG:Box: ', Box);\n  // console.log(\"MYLOG: updatedBox: \", updatedBox);\n  // return updatedBox;\n};\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImV4dGVuZC10aGVtZS10cmFuc2Zvcm1lci5qcyJdLCJuYW1lcyI6WyJmaWxlSW5mbyIsImFwaSIsImoiLCJqc2NvZGVzaGlmdCIsInJvb3QiLCJzb3VyY2UiLCJjYWxsRXhwcmVzc2lvbiIsImZpbmQiLCJDYWxsRXhwcmVzc2lvbiIsImNhbGxlZSIsInR5cGUiLCJuYW1lIiwiZXh0ZW5kVGhlbWVBcmd1bWVudCIsIk9iamVjdEV4cHJlc3Npb24iLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7ZUFFZSxDQUFDQSxRQUFELEVBQVdDLEdBQVgsS0FBbUI7QUFDaEMsUUFBTUMsQ0FBQyxHQUFHRCxHQUFHLENBQUNFLFdBQWQ7QUFFQSxRQUFNQyxJQUFJLEdBQUdGLENBQUMsQ0FBQ0YsUUFBUSxDQUFDSyxNQUFWLENBQWQsQ0FIZ0MsQ0FLaEM7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsUUFBTUMsY0FBYyxHQUFHRixJQUFJLENBQUNHLElBQUwsQ0FBVUwsQ0FBQyxDQUFDTSxjQUFaLEVBQTRCO0FBQ2pEQyxJQUFBQSxNQUFNLEVBQUU7QUFDTkMsTUFBQUEsSUFBSSxFQUFFLFlBREE7QUFFTkMsTUFBQUEsSUFBSSxFQUFFO0FBRkE7QUFEeUMsR0FBNUIsQ0FBdkI7QUFPQSxRQUFNQyxtQkFBbUIsR0FBR04sY0FBYyxDQUFDQyxJQUFmLENBQW9CTCxDQUFDLENBQUNXLGdCQUF0QixDQUE1QjtBQUVBQyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUgsbUJBQVosRUFuQmdDLENBcUJoQztBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0QsQyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvc3VyYWovU2l0ZXMvcHJvamVjdHMvbmF0aXZlYmFzZS1jb2RlbW9kLyIsInNvdXJjZXNDb250ZW50IjpbIi8vIFJlcGxhY2luZyBwcm9wcyB3aXRoIHR5cGVcblxuZXhwb3J0IGRlZmF1bHQgKGZpbGVJbmZvLCBhcGkpID0+IHtcbiAgY29uc3QgaiA9IGFwaS5qc2NvZGVzaGlmdDtcblxuICBjb25zdCByb290ID0gaihmaWxlSW5mby5zb3VyY2UpO1xuXG4gIC8vIC8vIGZpbmRpbmcgQm94XG4gIC8vIGNvbnN0IEJveCA9IHJvb3QuZmluZChqLmNhbGxFeHByZXNzaW9uLFxuICAvLyAgIGouaWRlbnRpZmllcignZm9vJyksXG4gIC8vIH0pO1xuXG4gIGNvbnN0IGNhbGxFeHByZXNzaW9uID0gcm9vdC5maW5kKGouQ2FsbEV4cHJlc3Npb24sIHtcbiAgICBjYWxsZWU6IHtcbiAgICAgIHR5cGU6IFwiSWRlbnRpZmllclwiLFxuICAgICAgbmFtZTogXCJleHRlbmRUaGVtZVwiLFxuICAgIH0sXG4gIH0pO1xuXG4gIGNvbnN0IGV4dGVuZFRoZW1lQXJndW1lbnQgPSBjYWxsRXhwcmVzc2lvbi5maW5kKGouT2JqZWN0RXhwcmVzc2lvbik7XG5cbiAgY29uc29sZS5sb2coZXh0ZW5kVGhlbWVBcmd1bWVudCk7XG5cbiAgLy8gZXh0ZW5kVGhlbWVBcmd1bWVudFxuICAvLyAgIC8vIC5maW5kKGouT2JqZWN0RXhwcmVzc2lvbikgLy8gRmluZCBhIGxpc3Qgb2Ygb2JqZWN0IGxpdGVyYWxzXG4gIC8vICAgLmZvckVhY2goKG9iaikgPT4ge1xuICAvLyAgICAgY29uc29sZS5sb2cob2JqLnZhbHVlLnByb3BlcnRpZXMpO1xuXG4gIC8vICAgICAvLyBvYmoudmFsdWUucHJvcGVydGllcy5mb3JFYWNoKChwcm9wZXJ0eSkgPT4ge1xuICAvLyAgICAgLy8gICBjb25zb2xlLmxvZyhwcm9wZXJ0eS5rZXkubmFtZSwgXCJvYmplIGhlcmVcIik7XG5cbiAgLy8gICAgIC8vICAgLy8gICAvLyDigKYgZ28gdGhyb3VnaCBlYWNoIHByb3BlcnR5IOKAplxuICAvLyAgICAgLy8gICAvLyAgIC8vIGlmIChwcm9wZXJ0eS50eXBlICE9PSAnUHJvcGVydHknKSByZXR1cm47XG4gIC8vICAgICAvLyAgIC8vICAgLy8gaWYgKHByb3BlcnR5LmtleS5uYW1lICE9PSAncHJvbWlzZScpIHJldHVybjtcbiAgLy8gICAgIC8vICAgLy8gICAvLyAvLyDigKYgYW5kIGlmIHRoZSBrZXkgaXMgJ3Byb21pc2UnLCBjaGFuZ2UgaXQgdG8gJ3JlcXVlc3QnXG4gIC8vICAgICAvLyAgIC8vICAgLy8gcHJvcGVydHkua2V5Lm5hbWUgPSAncmVxdWVzdCc7XG4gIC8vICAgICAvLyB9KTtcbiAgLy8gICB9KTtcblxuICAvLyBleHRlbmRUaGVtZUFyZ3VtZW50LnByb3BlcnRpZXMuZm9yRWFjaCgocHJvcGVydHkpID0+IHtcbiAgLy8gICBjb25zb2xlLmxvZyhwcm9wZXJ0eSk7XG4gIC8vIH0pO1xuICAvLyAvLyBjb25zb2xlLmxvZygnTVlMT0c6IEJveDogJywgQm94KTtcblxuICAvLyAvLyBmaW5kIGJnIGluIEJveFxuICAvLyBjb25zdCB1cGRhdGVkQm94ID0gQm94LmZpbmQoai5KU1hBdHRyaWJ1dGUsIHtcbiAgLy8gICB0eXBlOiBcIkpTWEF0dHJpYnV0ZVwiLFxuICAvLyB9KVxuICAvLyAgIC5yZXBsYWNlV2l0aCgobm9kZVBhdGgpID0+IHtcbiAgLy8gICAgIC8vIGdldCB0aGUgdW5kZXJseWluZyBOb2RlXG4gIC8vICAgICAvLyBjb25zb2xlLmxvZygnTVlMT0c6IG5vZGVQYXRoOiAnLCBub2RlUGF0aCk7XG4gIC8vICAgICBjb25zdCB7IG5vZGUgfSA9IG5vZGVQYXRoO1xuXG4gIC8vICAgICBjb25zb2xlLmxvZyhcIiVjICYqJiBub2RlLm5hbWUubmFtZVwiLCBcImNvbG9yOiAjMTBiOTgxO1wiLCBub2RlLm5hbWUubmFtZSk7XG4gIC8vICAgICBpZiAobm9kZS5uYW1lLm5hbWUgPT09IFwibGluZUhlaWdodFwiKSB7XG4gIC8vICAgICAgIC8vIG5vZGUudmFsdWUudmFsdWUgPSBcIjhcIjtcbiAgLy8gICAgICAgbm9kZS52YWx1ZS5leHByZXNzaW9uLnZhbHVlID0gXCI4XCI7XG4gIC8vICAgICAgIG5vZGUudmFsdWUuZXhwcmVzc2lvbi5yYXcgPSBcIjhcIjtcbiAgLy8gICAgICAgY29uc29sZS5sb2coXCJNWUxPRzogbm9kZTogXCIsIG5vZGUpO1xuICAvLyAgICAgfVxuXG4gIC8vICAgICAvLyBjaGFuZ2UgdG8gb3VyIG5ldyBwcm9wXG4gIC8vICAgICAvLyBub2RlLnZhbHVlLnZhbHVlID0gJ3JlZC40MDAnO1xuICAvLyAgICAgLy8gcmVwbGFjZVdpdGggc2hvdWxkIHJldHVybiBhIE5vZGUsIG5vdCBhIE5vZGVQYXRoXG4gIC8vICAgICByZXR1cm4gbm9kZTtcbiAgLy8gICB9KVxuICAvLyAgIC50b1NvdXJjZSgpO1xuXG4gIC8vIC8vIGNvbnNvbGUubG9nKCdNWUxPRzpCb3g6ICcsIEJveCk7XG4gIC8vIGNvbnNvbGUubG9nKFwiTVlMT0c6IHVwZGF0ZWRCb3g6IFwiLCB1cGRhdGVkQm94KTtcblxuICAvLyByZXR1cm4gdXBkYXRlZEJveDtcbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "extend-theme-transformer.js"
      ],
      "names": [
        "fileInfo",
        "api",
        "j",
        "jscodeshift",
        "root",
        "source",
        "callExpression",
        "find",
        "CallExpression",
        "callee",
        "type",
        "name",
        "extendThemeArgument",
        "ObjectExpression",
        "console",
        "log"
      ],
      "mappings": ";;;;;;;AAAA;eAEe,CAACA,QAAD,EAAWC,GAAX,KAAmB;AAChC,QAAMC,CAAC,GAAGD,GAAG,CAACE,WAAd;AAEA,QAAMC,IAAI,GAAGF,CAAC,CAACF,QAAQ,CAACK,MAAV,CAAd,CAHgC,CAKhC;AACA;AACA;AACA;;AAEA,QAAMC,cAAc,GAAGF,IAAI,CAACG,IAAL,CAAUL,CAAC,CAACM,cAAZ,EAA4B;AACjDC,IAAAA,MAAM,EAAE;AACNC,MAAAA,IAAI,EAAE,YADA;AAENC,MAAAA,IAAI,EAAE;AAFA;AADyC,GAA5B,CAAvB;AAOA,QAAMC,mBAAmB,GAAGN,cAAc,CAACC,IAAf,CAAoBL,CAAC,CAACW,gBAAtB,CAA5B;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,mBAAZ,EAnBgC,CAqBhC;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACD,C",
      "sourceRoot": "/Users/suraj/Sites/projects/nativebase-codemod/",
      "sourcesContent": [
        "// Replacing props with type\n\nexport default (fileInfo, api) => {\n  const j = api.jscodeshift;\n\n  const root = j(fileInfo.source);\n\n  // // finding Box\n  // const Box = root.find(j.callExpression,\n  //   j.identifier('foo'),\n  // });\n\n  const callExpression = root.find(j.CallExpression, {\n    callee: {\n      type: \"Identifier\",\n      name: \"extendTheme\",\n    },\n  });\n\n  const extendThemeArgument = callExpression.find(j.ObjectExpression);\n\n  console.log(extendThemeArgument);\n\n  // extendThemeArgument\n  //   // .find(j.ObjectExpression) // Find a list of object literals\n  //   .forEach((obj) => {\n  //     console.log(obj.value.properties);\n\n  //     // obj.value.properties.forEach((property) => {\n  //     //   console.log(property.key.name, \"obje here\");\n\n  //     //   //   // … go through each property …\n  //     //   //   // if (property.type !== 'Property') return;\n  //     //   //   // if (property.key.name !== 'promise') return;\n  //     //   //   // // … and if the key is 'promise', change it to 'request'\n  //     //   //   // property.key.name = 'request';\n  //     // });\n  //   });\n\n  // extendThemeArgument.properties.forEach((property) => {\n  //   console.log(property);\n  // });\n  // // console.log('MYLOG: Box: ', Box);\n\n  // // find bg in Box\n  // const updatedBox = Box.find(j.JSXAttribute, {\n  //   type: \"JSXAttribute\",\n  // })\n  //   .replaceWith((nodePath) => {\n  //     // get the underlying Node\n  //     // console.log('MYLOG: nodePath: ', nodePath);\n  //     const { node } = nodePath;\n\n  //     console.log(\"%c &*& node.name.name\", \"color: #10b981;\", node.name.name);\n  //     if (node.name.name === \"lineHeight\") {\n  //       // node.value.value = \"8\";\n  //       node.value.expression.value = \"8\";\n  //       node.value.expression.raw = \"8\";\n  //       console.log(\"MYLOG: node: \", node);\n  //     }\n\n  //     // change to our new prop\n  //     // node.value.value = 'red.400';\n  //     // replaceWith should return a Node, not a NodePath\n  //     return node;\n  //   })\n  //   .toSource();\n\n  // // console.log('MYLOG:Box: ', Box);\n  // console.log(\"MYLOG: updatedBox: \", updatedBox);\n\n  // return updatedBox;\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1630048297731
  }
}