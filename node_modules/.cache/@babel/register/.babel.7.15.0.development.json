{
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/adityajamuar/Sites/projects/nativebase/code-mod/nativebase-codemod/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/adityajamuar/Sites/projects/nativebase/code-mod/nativebase-codemod\",\"filename\":\"/Users/adityajamuar/Sites/projects/nativebase/code-mod/nativebase-codemod/transformer.js\",\"targets\":{},\"cloneInputAst\":true,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/adityajamuar/Sites/projects/nativebase/code-mod/nativebase-codemod\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"IndexedAccessType\":{\"enter\":[null]},\"OptionalIndexedAccessType\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/adityajamuar/Sites/projects/nativebase/code-mod/nativebase-codemod/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/adityajamuar/Sites/projects/nativebase/code-mod/nativebase-codemod",
      "filename": "/Users/adityajamuar/Sites/projects/nativebase/code-mod/nativebase-codemod/transformer.js",
      "targets": {},
      "cloneInputAst": true,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/adityajamuar/Sites/projects/nativebase/code-mod/nativebase-codemod",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-flow-strip-types",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            },
            "ImportDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "ClassPrivateProperty": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "TypeCastExpression": {
              "enter": [
                null,
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "ImportSpecifier": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "AnyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ArrayTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ClassImplements": {
              "enter": [
                null
              ]
            },
            "DeclareClass": {
              "enter": [
                null
              ]
            },
            "DeclareFunction": {
              "enter": [
                null
              ]
            },
            "DeclareInterface": {
              "enter": [
                null
              ]
            },
            "DeclareModule": {
              "enter": [
                null
              ]
            },
            "DeclareModuleExports": {
              "enter": [
                null
              ]
            },
            "DeclareTypeAlias": {
              "enter": [
                null
              ]
            },
            "DeclareOpaqueType": {
              "enter": [
                null
              ]
            },
            "DeclareVariable": {
              "enter": [
                null
              ]
            },
            "DeclareExportDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclareExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclaredPredicate": {
              "enter": [
                null
              ]
            },
            "ExistsTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeParam": {
              "enter": [
                null
              ]
            },
            "GenericTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "InferredPredicate": {
              "enter": [
                null
              ]
            },
            "InterfaceExtends": {
              "enter": [
                null
              ]
            },
            "InterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "InterfaceTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IntersectionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "MixedTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "EmptyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullableTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeInternalSlot": {
              "enter": [
                null
              ]
            },
            "ObjectTypeCallProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeIndexer": {
              "enter": [
                null
              ]
            },
            "ObjectTypeProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeSpreadProperty": {
              "enter": [
                null
              ]
            },
            "OpaqueType": {
              "enter": [
                null
              ]
            },
            "QualifiedTypeIdentifier": {
              "enter": [
                null
              ]
            },
            "StringLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "StringTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "SymbolTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ThisTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TupleTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeofTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeAlias": {
              "enter": [
                null
              ]
            },
            "TypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeParameter": {
              "enter": [
                null
              ]
            },
            "TypeParameterDeclaration": {
              "enter": [
                null
              ]
            },
            "TypeParameterInstantiation": {
              "enter": [
                null
              ]
            },
            "UnionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "Variance": {
              "enter": [
                null
              ]
            },
            "VoidTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IndexedAccessType": {
              "enter": [
                null
              ]
            },
            "OptionalIndexedAccessType": {
              "enter": [
                null
              ]
            },
            "ExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "syntax-numeric-separator",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/adityajamuar/Sites/projects/nativebase/code-mod/nativebase-codemod/transformer.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "nullishCoalescingOperator",
          [
            "flow",
            {}
          ],
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/adityajamuar/Sites/projects/nativebase/code-mod/nativebase-codemod/transformer.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/adityajamuar/Sites/projects/nativebase/code-mod/nativebase-codemod/",
        "sourceFileName": "transformer.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _config = _interopRequireDefault(require(\"./config.json\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst describe = require(\"jscodeshift-helper\").describe;\n\nvar _default = (fileInfo, api) => {\n  const j = api.jscodeshift;\n  const root = j(fileInfo.source);\n  const JSXElement = root.find(j.JSXOpeningElement, {\n    name: {\n      type: \"JSXIdentifier\"\n    }\n  });\n  const updatedJSXElement = JSXElement.find(j.JSXAttribute, {\n    type: \"JSXAttribute\"\n  }).replaceWith(nodePath => {\n    const {\n      node\n    } = nodePath;\n\n    if (_config.default[node.name.name]) {\n      let propNode = _config.default[node.name.name];\n      let value = undefined;\n\n      if (node.value.type === \"Literal\") {\n        value = node.value.value;\n      } else if (node.value.type === \"JSXExpressionContainer\") {\n        value = node.value.expression.value;\n      }\n\n      if (propNode[\"valueMap\"] && propNode[\"valueMap\"][value]) {\n        value = propNode[\"valueMap\"][value];\n      } else {\n        if (!value.endsWith(\"px\")) value += \"px\";\n      }\n\n      const newNode = j.literal(value);\n      node.value = newNode;\n    }\n\n    describe(node);\n    return node;\n  }).toSource();\n  return updatedJSXElement;\n};\n\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRyYW5zZm9ybWVyLmpzIl0sIm5hbWVzIjpbImRlc2NyaWJlIiwicmVxdWlyZSIsImZpbGVJbmZvIiwiYXBpIiwiaiIsImpzY29kZXNoaWZ0Iiwicm9vdCIsInNvdXJjZSIsIkpTWEVsZW1lbnQiLCJmaW5kIiwiSlNYT3BlbmluZ0VsZW1lbnQiLCJuYW1lIiwidHlwZSIsInVwZGF0ZWRKU1hFbGVtZW50IiwiSlNYQXR0cmlidXRlIiwicmVwbGFjZVdpdGgiLCJub2RlUGF0aCIsIm5vZGUiLCJjb25maWciLCJwcm9wTm9kZSIsInZhbHVlIiwidW5kZWZpbmVkIiwiZXhwcmVzc2lvbiIsImVuZHNXaXRoIiwibmV3Tm9kZSIsImxpdGVyYWwiLCJ0b1NvdXJjZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7O0FBQ0EsTUFBTUEsUUFBUSxHQUFHQyxPQUFPLENBQUMsb0JBQUQsQ0FBUCxDQUE4QkQsUUFBL0M7O2VBRWUsQ0FBQ0UsUUFBRCxFQUFXQyxHQUFYLEtBQW1CO0FBQ2hDLFFBQU1DLENBQUMsR0FBR0QsR0FBRyxDQUFDRSxXQUFkO0FBRUEsUUFBTUMsSUFBSSxHQUFHRixDQUFDLENBQUNGLFFBQVEsQ0FBQ0ssTUFBVixDQUFkO0FBQ0EsUUFBTUMsVUFBVSxHQUFHRixJQUFJLENBQUNHLElBQUwsQ0FBVUwsQ0FBQyxDQUFDTSxpQkFBWixFQUErQjtBQUNoREMsSUFBQUEsSUFBSSxFQUFFO0FBQ0pDLE1BQUFBLElBQUksRUFBRTtBQURGO0FBRDBDLEdBQS9CLENBQW5CO0FBTUEsUUFBTUMsaUJBQWlCLEdBQUdMLFVBQVUsQ0FBQ0MsSUFBWCxDQUFnQkwsQ0FBQyxDQUFDVSxZQUFsQixFQUFnQztBQUN4REYsSUFBQUEsSUFBSSxFQUFFO0FBRGtELEdBQWhDLEVBR3ZCRyxXQUh1QixDQUdWQyxRQUFELElBQWM7QUFDekIsVUFBTTtBQUFFQyxNQUFBQTtBQUFGLFFBQVdELFFBQWpCOztBQUVBLFFBQUlFLGdCQUFPRCxJQUFJLENBQUNOLElBQUwsQ0FBVUEsSUFBakIsQ0FBSixFQUE0QjtBQUMxQixVQUFJUSxRQUFRLEdBQUdELGdCQUFPRCxJQUFJLENBQUNOLElBQUwsQ0FBVUEsSUFBakIsQ0FBZjtBQUNBLFVBQUlTLEtBQUssR0FBR0MsU0FBWjs7QUFFQSxVQUFJSixJQUFJLENBQUNHLEtBQUwsQ0FBV1IsSUFBWCxLQUFvQixTQUF4QixFQUFtQztBQUNqQ1EsUUFBQUEsS0FBSyxHQUFHSCxJQUFJLENBQUNHLEtBQUwsQ0FBV0EsS0FBbkI7QUFDRCxPQUZELE1BRU8sSUFBSUgsSUFBSSxDQUFDRyxLQUFMLENBQVdSLElBQVgsS0FBb0Isd0JBQXhCLEVBQWtEO0FBQ3ZEUSxRQUFBQSxLQUFLLEdBQUdILElBQUksQ0FBQ0csS0FBTCxDQUFXRSxVQUFYLENBQXNCRixLQUE5QjtBQUNEOztBQUVELFVBQUlELFFBQVEsQ0FBQyxVQUFELENBQVIsSUFBd0JBLFFBQVEsQ0FBQyxVQUFELENBQVIsQ0FBcUJDLEtBQXJCLENBQTVCLEVBQXlEO0FBQ3ZEQSxRQUFBQSxLQUFLLEdBQUdELFFBQVEsQ0FBQyxVQUFELENBQVIsQ0FBcUJDLEtBQXJCLENBQVI7QUFDRCxPQUZELE1BRU87QUFDTCxZQUFJLENBQUNBLEtBQUssQ0FBQ0csUUFBTixDQUFlLElBQWYsQ0FBTCxFQUEyQkgsS0FBSyxJQUFJLElBQVQ7QUFDNUI7O0FBRUQsWUFBTUksT0FBTyxHQUFHcEIsQ0FBQyxDQUFDcUIsT0FBRixDQUFVTCxLQUFWLENBQWhCO0FBQ0FILE1BQUFBLElBQUksQ0FBQ0csS0FBTCxHQUFhSSxPQUFiO0FBQ0Q7O0FBRUR4QixJQUFBQSxRQUFRLENBQUNpQixJQUFELENBQVI7QUFDQSxXQUFPQSxJQUFQO0FBQ0QsR0E1QnVCLEVBNkJ2QlMsUUE3QnVCLEVBQTFCO0FBK0JBLFNBQU9iLGlCQUFQO0FBQ0QsQyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvYWRpdHlhamFtdWFyL1NpdGVzL3Byb2plY3RzL25hdGl2ZWJhc2UvY29kZS1tb2QvbmF0aXZlYmFzZS1jb2RlbW9kLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjb25maWcgZnJvbSBcIi4vY29uZmlnLmpzb25cIjtcbmNvbnN0IGRlc2NyaWJlID0gcmVxdWlyZShcImpzY29kZXNoaWZ0LWhlbHBlclwiKS5kZXNjcmliZTtcblxuZXhwb3J0IGRlZmF1bHQgKGZpbGVJbmZvLCBhcGkpID0+IHtcbiAgY29uc3QgaiA9IGFwaS5qc2NvZGVzaGlmdDtcblxuICBjb25zdCByb290ID0gaihmaWxlSW5mby5zb3VyY2UpO1xuICBjb25zdCBKU1hFbGVtZW50ID0gcm9vdC5maW5kKGouSlNYT3BlbmluZ0VsZW1lbnQsIHtcbiAgICBuYW1lOiB7XG4gICAgICB0eXBlOiBcIkpTWElkZW50aWZpZXJcIixcbiAgICB9LFxuICB9KTtcblxuICBjb25zdCB1cGRhdGVkSlNYRWxlbWVudCA9IEpTWEVsZW1lbnQuZmluZChqLkpTWEF0dHJpYnV0ZSwge1xuICAgIHR5cGU6IFwiSlNYQXR0cmlidXRlXCIsXG4gIH0pXG4gICAgLnJlcGxhY2VXaXRoKChub2RlUGF0aCkgPT4ge1xuICAgICAgY29uc3QgeyBub2RlIH0gPSBub2RlUGF0aDtcblxuICAgICAgaWYgKGNvbmZpZ1tub2RlLm5hbWUubmFtZV0pIHtcbiAgICAgICAgbGV0IHByb3BOb2RlID0gY29uZmlnW25vZGUubmFtZS5uYW1lXTtcbiAgICAgICAgbGV0IHZhbHVlID0gdW5kZWZpbmVkO1xuXG4gICAgICAgIGlmIChub2RlLnZhbHVlLnR5cGUgPT09IFwiTGl0ZXJhbFwiKSB7XG4gICAgICAgICAgdmFsdWUgPSBub2RlLnZhbHVlLnZhbHVlO1xuICAgICAgICB9IGVsc2UgaWYgKG5vZGUudmFsdWUudHlwZSA9PT0gXCJKU1hFeHByZXNzaW9uQ29udGFpbmVyXCIpIHtcbiAgICAgICAgICB2YWx1ZSA9IG5vZGUudmFsdWUuZXhwcmVzc2lvbi52YWx1ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChwcm9wTm9kZVtcInZhbHVlTWFwXCJdICYmIHByb3BOb2RlW1widmFsdWVNYXBcIl1bdmFsdWVdKSB7XG4gICAgICAgICAgdmFsdWUgPSBwcm9wTm9kZVtcInZhbHVlTWFwXCJdW3ZhbHVlXTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpZiAoIXZhbHVlLmVuZHNXaXRoKFwicHhcIikpIHZhbHVlICs9IFwicHhcIjtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IG5ld05vZGUgPSBqLmxpdGVyYWwodmFsdWUpO1xuICAgICAgICBub2RlLnZhbHVlID0gbmV3Tm9kZTtcbiAgICAgIH1cblxuICAgICAgZGVzY3JpYmUobm9kZSk7XG4gICAgICByZXR1cm4gbm9kZTtcbiAgICB9KVxuICAgIC50b1NvdXJjZSgpO1xuXG4gIHJldHVybiB1cGRhdGVkSlNYRWxlbWVudDtcbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "transformer.js"
      ],
      "names": [
        "describe",
        "require",
        "fileInfo",
        "api",
        "j",
        "jscodeshift",
        "root",
        "source",
        "JSXElement",
        "find",
        "JSXOpeningElement",
        "name",
        "type",
        "updatedJSXElement",
        "JSXAttribute",
        "replaceWith",
        "nodePath",
        "node",
        "config",
        "propNode",
        "value",
        "undefined",
        "expression",
        "endsWith",
        "newNode",
        "literal",
        "toSource"
      ],
      "mappings": ";;;;;;;AAAA;;;;AACA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,oBAAD,CAAP,CAA8BD,QAA/C;;eAEe,CAACE,QAAD,EAAWC,GAAX,KAAmB;AAChC,QAAMC,CAAC,GAAGD,GAAG,CAACE,WAAd;AAEA,QAAMC,IAAI,GAAGF,CAAC,CAACF,QAAQ,CAACK,MAAV,CAAd;AACA,QAAMC,UAAU,GAAGF,IAAI,CAACG,IAAL,CAAUL,CAAC,CAACM,iBAAZ,EAA+B;AAChDC,IAAAA,IAAI,EAAE;AACJC,MAAAA,IAAI,EAAE;AADF;AAD0C,GAA/B,CAAnB;AAMA,QAAMC,iBAAiB,GAAGL,UAAU,CAACC,IAAX,CAAgBL,CAAC,CAACU,YAAlB,EAAgC;AACxDF,IAAAA,IAAI,EAAE;AADkD,GAAhC,EAGvBG,WAHuB,CAGVC,QAAD,IAAc;AACzB,UAAM;AAAEC,MAAAA;AAAF,QAAWD,QAAjB;;AAEA,QAAIE,gBAAOD,IAAI,CAACN,IAAL,CAAUA,IAAjB,CAAJ,EAA4B;AAC1B,UAAIQ,QAAQ,GAAGD,gBAAOD,IAAI,CAACN,IAAL,CAAUA,IAAjB,CAAf;AACA,UAAIS,KAAK,GAAGC,SAAZ;;AAEA,UAAIJ,IAAI,CAACG,KAAL,CAAWR,IAAX,KAAoB,SAAxB,EAAmC;AACjCQ,QAAAA,KAAK,GAAGH,IAAI,CAACG,KAAL,CAAWA,KAAnB;AACD,OAFD,MAEO,IAAIH,IAAI,CAACG,KAAL,CAAWR,IAAX,KAAoB,wBAAxB,EAAkD;AACvDQ,QAAAA,KAAK,GAAGH,IAAI,CAACG,KAAL,CAAWE,UAAX,CAAsBF,KAA9B;AACD;;AAED,UAAID,QAAQ,CAAC,UAAD,CAAR,IAAwBA,QAAQ,CAAC,UAAD,CAAR,CAAqBC,KAArB,CAA5B,EAAyD;AACvDA,QAAAA,KAAK,GAAGD,QAAQ,CAAC,UAAD,CAAR,CAAqBC,KAArB,CAAR;AACD,OAFD,MAEO;AACL,YAAI,CAACA,KAAK,CAACG,QAAN,CAAe,IAAf,CAAL,EAA2BH,KAAK,IAAI,IAAT;AAC5B;;AAED,YAAMI,OAAO,GAAGpB,CAAC,CAACqB,OAAF,CAAUL,KAAV,CAAhB;AACAH,MAAAA,IAAI,CAACG,KAAL,GAAaI,OAAb;AACD;;AAEDxB,IAAAA,QAAQ,CAACiB,IAAD,CAAR;AACA,WAAOA,IAAP;AACD,GA5BuB,EA6BvBS,QA7BuB,EAA1B;AA+BA,SAAOb,iBAAP;AACD,C",
      "sourceRoot": "/Users/adityajamuar/Sites/projects/nativebase/code-mod/nativebase-codemod/",
      "sourcesContent": [
        "import config from \"./config.json\";\nconst describe = require(\"jscodeshift-helper\").describe;\n\nexport default (fileInfo, api) => {\n  const j = api.jscodeshift;\n\n  const root = j(fileInfo.source);\n  const JSXElement = root.find(j.JSXOpeningElement, {\n    name: {\n      type: \"JSXIdentifier\",\n    },\n  });\n\n  const updatedJSXElement = JSXElement.find(j.JSXAttribute, {\n    type: \"JSXAttribute\",\n  })\n    .replaceWith((nodePath) => {\n      const { node } = nodePath;\n\n      if (config[node.name.name]) {\n        let propNode = config[node.name.name];\n        let value = undefined;\n\n        if (node.value.type === \"Literal\") {\n          value = node.value.value;\n        } else if (node.value.type === \"JSXExpressionContainer\") {\n          value = node.value.expression.value;\n        }\n\n        if (propNode[\"valueMap\"] && propNode[\"valueMap\"][value]) {\n          value = propNode[\"valueMap\"][value];\n        } else {\n          if (!value.endsWith(\"px\")) value += \"px\";\n        }\n\n        const newNode = j.literal(value);\n        node.value = newNode;\n      }\n\n      describe(node);\n      return node;\n    })\n    .toSource();\n\n  return updatedJSXElement;\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1630054532959
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/adityajamuar/Sites/projects/nativebase/code-mod/nativebase-codemod/node_modules/jscodeshift-helper/\",\"babelrc\":false,\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/adityajamuar/Sites/projects/nativebase/code-mod/nativebase-codemod\",\"filename\":\"/Users/adityajamuar/Sites/projects/nativebase/code-mod/nativebase-codemod/node_modules/jscodeshift-helper/index.js\",\"targets\":{},\"cloneInputAst\":true,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/adityajamuar/Sites/projects/nativebase/code-mod/nativebase-codemod\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{}},{\"key\":\"transform-flow-strip-types\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]},\"ImportDeclaration\":{\"enter\":[null,null]},\"ClassPrivateProperty\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"TypeCastExpression\":{\"enter\":[null,null]},\"CallExpression\":{\"enter\":[null]},\"OptionalCallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"ImportSpecifier\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"AnyTypeAnnotation\":{\"enter\":[null]},\"ArrayTypeAnnotation\":{\"enter\":[null]},\"BooleanTypeAnnotation\":{\"enter\":[null]},\"BooleanLiteralTypeAnnotation\":{\"enter\":[null]},\"NullLiteralTypeAnnotation\":{\"enter\":[null]},\"ClassImplements\":{\"enter\":[null]},\"DeclareClass\":{\"enter\":[null]},\"DeclareFunction\":{\"enter\":[null]},\"DeclareInterface\":{\"enter\":[null]},\"DeclareModule\":{\"enter\":[null]},\"DeclareModuleExports\":{\"enter\":[null]},\"DeclareTypeAlias\":{\"enter\":[null]},\"DeclareOpaqueType\":{\"enter\":[null]},\"DeclareVariable\":{\"enter\":[null]},\"DeclareExportDeclaration\":{\"enter\":[null]},\"DeclareExportAllDeclaration\":{\"enter\":[null]},\"DeclaredPredicate\":{\"enter\":[null]},\"ExistsTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeAnnotation\":{\"enter\":[null]},\"FunctionTypeParam\":{\"enter\":[null]},\"GenericTypeAnnotation\":{\"enter\":[null]},\"InferredPredicate\":{\"enter\":[null]},\"InterfaceExtends\":{\"enter\":[null]},\"InterfaceDeclaration\":{\"enter\":[null]},\"InterfaceTypeAnnotation\":{\"enter\":[null]},\"IntersectionTypeAnnotation\":{\"enter\":[null]},\"MixedTypeAnnotation\":{\"enter\":[null]},\"EmptyTypeAnnotation\":{\"enter\":[null]},\"NullableTypeAnnotation\":{\"enter\":[null]},\"NumberLiteralTypeAnnotation\":{\"enter\":[null]},\"NumberTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeAnnotation\":{\"enter\":[null]},\"ObjectTypeInternalSlot\":{\"enter\":[null]},\"ObjectTypeCallProperty\":{\"enter\":[null]},\"ObjectTypeIndexer\":{\"enter\":[null]},\"ObjectTypeProperty\":{\"enter\":[null]},\"ObjectTypeSpreadProperty\":{\"enter\":[null]},\"OpaqueType\":{\"enter\":[null]},\"QualifiedTypeIdentifier\":{\"enter\":[null]},\"StringLiteralTypeAnnotation\":{\"enter\":[null]},\"StringTypeAnnotation\":{\"enter\":[null]},\"SymbolTypeAnnotation\":{\"enter\":[null]},\"ThisTypeAnnotation\":{\"enter\":[null]},\"TupleTypeAnnotation\":{\"enter\":[null]},\"TypeofTypeAnnotation\":{\"enter\":[null]},\"TypeAlias\":{\"enter\":[null]},\"TypeAnnotation\":{\"enter\":[null]},\"TypeParameter\":{\"enter\":[null]},\"TypeParameterDeclaration\":{\"enter\":[null]},\"TypeParameterInstantiation\":{\"enter\":[null]},\"UnionTypeAnnotation\":{\"enter\":[null]},\"Variance\":{\"enter\":[null]},\"VoidTypeAnnotation\":{\"enter\":[null]},\"IndexedAccessType\":{\"enter\":[null]},\"OptionalIndexedAccessType\":{\"enter\":[null]},\"ExportAllDeclaration\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/adityajamuar/Sites/projects/nativebase/code-mod/nativebase-codemod/node_modules/jscodeshift-helper/",
      "babelrc": false,
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/adityajamuar/Sites/projects/nativebase/code-mod/nativebase-codemod",
      "filename": "/Users/adityajamuar/Sites/projects/nativebase/code-mod/nativebase-codemod/node_modules/jscodeshift-helper/index.js",
      "targets": {},
      "cloneInputAst": true,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/adityajamuar/Sites/projects/nativebase/code-mod/nativebase-codemod",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {}
        },
        {
          "key": "transform-flow-strip-types",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            },
            "ImportDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "ClassPrivateProperty": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "TypeCastExpression": {
              "enter": [
                null,
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "ImportSpecifier": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "AnyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ArrayTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "BooleanLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ClassImplements": {
              "enter": [
                null
              ]
            },
            "DeclareClass": {
              "enter": [
                null
              ]
            },
            "DeclareFunction": {
              "enter": [
                null
              ]
            },
            "DeclareInterface": {
              "enter": [
                null
              ]
            },
            "DeclareModule": {
              "enter": [
                null
              ]
            },
            "DeclareModuleExports": {
              "enter": [
                null
              ]
            },
            "DeclareTypeAlias": {
              "enter": [
                null
              ]
            },
            "DeclareOpaqueType": {
              "enter": [
                null
              ]
            },
            "DeclareVariable": {
              "enter": [
                null
              ]
            },
            "DeclareExportDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclareExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "DeclaredPredicate": {
              "enter": [
                null
              ]
            },
            "ExistsTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "FunctionTypeParam": {
              "enter": [
                null
              ]
            },
            "GenericTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "InferredPredicate": {
              "enter": [
                null
              ]
            },
            "InterfaceExtends": {
              "enter": [
                null
              ]
            },
            "InterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "InterfaceTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IntersectionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "MixedTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "EmptyTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NullableTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "NumberTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ObjectTypeInternalSlot": {
              "enter": [
                null
              ]
            },
            "ObjectTypeCallProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeIndexer": {
              "enter": [
                null
              ]
            },
            "ObjectTypeProperty": {
              "enter": [
                null
              ]
            },
            "ObjectTypeSpreadProperty": {
              "enter": [
                null
              ]
            },
            "OpaqueType": {
              "enter": [
                null
              ]
            },
            "QualifiedTypeIdentifier": {
              "enter": [
                null
              ]
            },
            "StringLiteralTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "StringTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "SymbolTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "ThisTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TupleTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeofTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeAlias": {
              "enter": [
                null
              ]
            },
            "TypeAnnotation": {
              "enter": [
                null
              ]
            },
            "TypeParameter": {
              "enter": [
                null
              ]
            },
            "TypeParameterDeclaration": {
              "enter": [
                null
              ]
            },
            "TypeParameterInstantiation": {
              "enter": [
                null
              ]
            },
            "UnionTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "Variance": {
              "enter": [
                null
              ]
            },
            "VoidTypeAnnotation": {
              "enter": [
                null
              ]
            },
            "IndexedAccessType": {
              "enter": [
                null
              ]
            },
            "OptionalIndexedAccessType": {
              "enter": [
                null
              ]
            },
            "ExportAllDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "syntax-numeric-separator",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/adityajamuar/Sites/projects/nativebase/code-mod/nativebase-codemod/node_modules/jscodeshift-helper/index.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "nullishCoalescingOperator",
          [
            "flow",
            {}
          ],
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/adityajamuar/Sites/projects/nativebase/code-mod/nativebase-codemod/node_modules/jscodeshift-helper/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/adityajamuar/Sites/projects/nativebase/code-mod/nativebase-codemod/node_modules/jscodeshift-helper/",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar util = require('util');\n\nvar NODE_INSPECT_DEPTH = 2;\n\nfunction removeLocationData(node) {\n  var nodeWithoutLocationInfo = Object.assign({}, node);\n  delete nodeWithoutLocationInfo.loc;\n  delete nodeWithoutLocationInfo.start;\n  delete nodeWithoutLocationInfo.end;\n  return nodeWithoutLocationInfo;\n}\n\nfunction inspectNode(node) {\n  var nodeWithoutLocationInfo = removeLocationData(node);\n  return util.inspect(nodeWithoutLocationInfo, {\n    depth: NODE_INSPECT_DEPTH\n  });\n}\n\nfunction printReferences(references) {\n  return 'References:\\n\\t' + references.join('\\n\\t');\n}\n\nfunction printDescription(description) {\n  return 'Description:\\n\\t' + description;\n}\n\nfunction printMethods(methods) {\n  return 'Methods:\\n\\t' + Object.keys(methods).map(function (name) {\n    return name + ' - ' + methods[name];\n  }).join('\\n\\t');\n}\n\nfunction printProps(props) {\n  return 'Properties:\\n\\t' + Object.keys(props).map(function (name) {\n    return name + ' - ' + props[name];\n  }).join('\\n\\t');\n}\n\nfunction describeCollection(collection) {\n  var size = collection.size();\n  var types = collection.getTypes();\n  var methods = {\n    at: 'Returns a new collection containing only the element at position index. In case of a negative index, the element is taken from the end.',\n    childElements: '',\n    childNodes: '',\n    closest: '',\n    closestScope: '',\n    filter: 'Returns a new collection containing the nodes for which the callback returns true.',\n    findJSXElements: '',\n    findJSXElementsByModuleName: '',\n    findVariableDeclarators: '',\n    forEach: 'Executes callback for each node/path in the collection.',\n    get: 'Proxies to NodePath#get of the first path.',\n    getAST: '',\n    getTypes: '',\n    getVariableDeclarators: '',\n    insertAfter: '',\n    insertBefore: '',\n    isOfType: 'Returns true if this collection has the type `type`.',\n    map: 'Executes the callback for every path in the collection and returns a new collection from the return values (which must be paths). The callback can return null to indicate to exclude the element from the new collection. If an array is returned, the array will be flattened into the result collection.',\n    nodes: 'Returns an array of AST nodes in this collection.',\n    paths: '',\n    remove: '',\n    renameTo: '',\n    replaceWith: '',\n    size: 'Returns the number of elements in this collection.',\n    toSource: 'Returns pretty printed JS code.'\n  };\n  var description = 'A `Collection` is a generic collection of `NodePath`s. It only has a generic API to access and process the elements of the list. It doesn\\'t know anything about AST types.';\n  var references = ['https://github.com/facebook/jscodeshift/wiki/jscodeshift-Documentation#collections', 'https://github.com/facebook/jscodeshift/blob/master/src/Collection.js'];\n  return ['\\nThis is a Collection with ' + size + ' item(s) of types: ' + types.join(', ') + '.', printDescription(description), printMethods(methods), printReferences(references)].join('\\n\\n');\n}\n\nfunction describeNodePath(nodePath) {\n  var methods = {\n    canBeFirstInStatement: '',\n    firstInStatement: '',\n    getValueProperty: '',\n    needsParens: '',\n    prune: '',\n    replace: ''\n  };\n  var props = {\n    parent: 'The wrapped AST node\\'s parent, wrapped in another `NodePath`.',\n    scope: 'Scope information about the wrapped AST node.',\n    node: 'The wrapped AST node.',\n    value: 'Same as #node'\n  };\n  var description = 'A `NodePath` (aka `Path`) wraps the actual AST node (aka `Node`) and provides information such as scope and hierarchical relationship that is not available when looking at the node in isolation.  To access the wrapped Node, use `.node` or `.value`.';\n  var references = ['https://github.com/facebook/jscodeshift/wiki/jscodeshift-Documentation#nodepaths', 'https://github.com/benjamn/ast-types#nodepath', 'https://github.com/benjamn/ast-types#scope'];\n  return ['\\nThis is a `NodePath` wrapping the `Node`:', inspectNode(nodePath.node), printDescription(description), printMethods(methods), printProps(props), printReferences(references)].join('\\n\\n');\n}\n\nfunction describeNode(node) {\n  var description = 'A `Node` (aka AST Node) is what you see in the AST Explorer.  This is the raw data about the code.';\n  var references = ['https://github.com/facebook/jscodeshift/wiki/jscodeshift-Documentation#node-1', 'http://astexplorer.net/'];\n  return ['\\nThis is a `Node` of type \"' + node.type + '.\"', inspectNode(node), printDescription(description), printReferences(references)].join('\\n\\n');\n}\n\nfunction describeGeneric(item) {\n  return ['\\nThis is a generic object.', util.inspect(item)].join('\\n\\n');\n}\n\nfunction describe(entity) {\n  var description;\n  var type = entity.constructor.name;\n\n  switch (type) {\n    case 'Collection':\n      description = describeCollection(entity);\n      break;\n\n    case 'NodePath':\n      description = describeNodePath(entity);\n      break;\n\n    case 'Node':\n      description = describeNode(entity);\n      break;\n\n    default:\n      description = describeGeneric(entity);\n  }\n\n  var line = '---------------------------------------';\n  console.log('\\n' + line + description + '\\n');\n}\n\nmodule.exports = {\n  describe: describe\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "util",
        "require",
        "NODE_INSPECT_DEPTH",
        "removeLocationData",
        "node",
        "nodeWithoutLocationInfo",
        "Object",
        "assign",
        "loc",
        "start",
        "end",
        "inspectNode",
        "inspect",
        "depth",
        "printReferences",
        "references",
        "join",
        "printDescription",
        "description",
        "printMethods",
        "methods",
        "keys",
        "map",
        "name",
        "printProps",
        "props",
        "describeCollection",
        "collection",
        "size",
        "types",
        "getTypes",
        "at",
        "childElements",
        "childNodes",
        "closest",
        "closestScope",
        "filter",
        "findJSXElements",
        "findJSXElementsByModuleName",
        "findVariableDeclarators",
        "forEach",
        "get",
        "getAST",
        "getVariableDeclarators",
        "insertAfter",
        "insertBefore",
        "isOfType",
        "nodes",
        "paths",
        "remove",
        "renameTo",
        "replaceWith",
        "toSource",
        "describeNodePath",
        "nodePath",
        "canBeFirstInStatement",
        "firstInStatement",
        "getValueProperty",
        "needsParens",
        "prune",
        "replace",
        "parent",
        "scope",
        "value",
        "describeNode",
        "type",
        "describeGeneric",
        "item",
        "describe",
        "entity",
        "constructor",
        "line",
        "console",
        "log",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/adityajamuar/Sites/projects/nativebase/code-mod/nativebase-codemod/node_modules/jscodeshift-helper/",
      "sourcesContent": [
        "var util = require('util');\n\nvar NODE_INSPECT_DEPTH = 2;\n\nfunction removeLocationData(node) {\n  var nodeWithoutLocationInfo = Object.assign({}, node);\n  delete nodeWithoutLocationInfo.loc;\n  delete nodeWithoutLocationInfo.start;\n  delete nodeWithoutLocationInfo.end;\n\n  return nodeWithoutLocationInfo;\n}\n\nfunction inspectNode(node) {\n  var nodeWithoutLocationInfo = removeLocationData(node);\n  return util.inspect(nodeWithoutLocationInfo, { depth: NODE_INSPECT_DEPTH });\n}\n\nfunction printReferences(references) {\n  return 'References:\\n\\t' + references.join('\\n\\t');\n}\n\nfunction printDescription(description) {\n  return 'Description:\\n\\t' + description;\n}\n\nfunction printMethods(methods) {\n  return 'Methods:\\n\\t' + Object.keys(methods).map(function (name) {\n    return name + ' - ' + methods[name];\n  }).join('\\n\\t');\n}\n\nfunction printProps(props) {\n  return 'Properties:\\n\\t' + Object.keys(props).map(function (name) {\n    return name + ' - ' + props[name];\n  }).join('\\n\\t');\n}\n\nfunction describeCollection(collection) {\n  var size = collection.size();\n  var types = collection.getTypes();\n  var methods = {\n    at: 'Returns a new collection containing only the element at position index. In case of a negative index, the element is taken from the end.',\n    childElements: '',\n    childNodes: '',\n    closest: '',\n    closestScope: '',\n    filter: 'Returns a new collection containing the nodes for which the callback returns true.',\n    findJSXElements: '',\n    findJSXElementsByModuleName: '',\n    findVariableDeclarators: '',\n    forEach: 'Executes callback for each node/path in the collection.',\n    get: 'Proxies to NodePath#get of the first path.',\n    getAST: '',\n    getTypes: '',\n    getVariableDeclarators: '',\n    insertAfter: '',\n    insertBefore: '',\n    isOfType: 'Returns true if this collection has the type `type`.',\n    map: 'Executes the callback for every path in the collection and returns a new collection from the return values (which must be paths). The callback can return null to indicate to exclude the element from the new collection. If an array is returned, the array will be flattened into the result collection.',\n    nodes: 'Returns an array of AST nodes in this collection.',\n    paths: '',\n    remove: '',\n    renameTo: '',\n    replaceWith: '',\n    size: 'Returns the number of elements in this collection.',\n    toSource: 'Returns pretty printed JS code.',\n  };\n\n  var description = 'A `Collection` is a generic collection of `NodePath`s. It only has a generic API to access and process the elements of the list. It doesn\\'t know anything about AST types.';\n  var references = [\n    'https://github.com/facebook/jscodeshift/wiki/jscodeshift-Documentation#collections',\n    'https://github.com/facebook/jscodeshift/blob/master/src/Collection.js',\n  ];\n\n  return [\n    '\\nThis is a Collection with ' + size + ' item(s) of types: ' + types.join(', ') + '.',\n    printDescription(description),\n    printMethods(methods),\n    printReferences(references),\n  ].join('\\n\\n');\n}\n\nfunction describeNodePath(nodePath) {\n  var methods = {\n    canBeFirstInStatement: '',\n    firstInStatement: '',\n    getValueProperty: '',\n    needsParens: '',\n    prune: '',\n    replace: '',\n  };\n\n  var props = {\n    parent: 'The wrapped AST node\\'s parent, wrapped in another `NodePath`.',\n    scope: 'Scope information about the wrapped AST node.',\n    node: 'The wrapped AST node.',\n    value: 'Same as #node',\n  };\n\n  var description = 'A `NodePath` (aka `Path`) wraps the actual AST node (aka `Node`) and provides information such as scope and hierarchical relationship that is not available when looking at the node in isolation.  To access the wrapped Node, use `.node` or `.value`.';\n\n  var references = [\n    'https://github.com/facebook/jscodeshift/wiki/jscodeshift-Documentation#nodepaths',\n    'https://github.com/benjamn/ast-types#nodepath',\n    'https://github.com/benjamn/ast-types#scope',\n  ];\n\n  return [\n    '\\nThis is a `NodePath` wrapping the `Node`:',\n    inspectNode(nodePath.node),\n    printDescription(description),\n    printMethods(methods),\n    printProps(props),\n    printReferences(references),\n  ].join('\\n\\n');\n}\n\nfunction describeNode(node) {\n  var description = 'A `Node` (aka AST Node) is what you see in the AST Explorer.  This is the raw data about the code.';\n\n  var references = [\n    'https://github.com/facebook/jscodeshift/wiki/jscodeshift-Documentation#node-1',\n    'http://astexplorer.net/',\n  ];\n\n  return [\n    '\\nThis is a `Node` of type \"' + node.type + '.\"',\n    inspectNode(node),\n    printDescription(description),\n    printReferences(references),\n  ].join('\\n\\n');\n}\n\nfunction describeGeneric(item) {\n  return [\n    '\\nThis is a generic object.',\n    util.inspect(item),\n  ].join('\\n\\n');\n}\n\nfunction describe(entity) {\n  var description;\n  var type = entity.constructor.name;\n\n  switch (type) {\n    case 'Collection':\n      description = describeCollection(entity);\n      break;\n\n    case 'NodePath':\n      description = describeNodePath(entity);\n      break;\n\n    case 'Node':\n      description = describeNode(entity);\n      break;\n\n    default:\n      description = describeGeneric(entity);\n  }\n\n  var line = '---------------------------------------'\n  console.log('\\n' + line + description + '\\n');\n}\n\nmodule.exports = {\n  describe: describe,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1629893431622
  }
}